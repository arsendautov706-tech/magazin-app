document.addEventListener('DOMContentLoaded', async () => {
  try {
    const res = await fetch('/session');
    const data = await res.json();

    if (data.success) {
      const { username, role } = data.user;

      // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
      const welcome = document.createElement('div');
      welcome.innerHTML = `üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, <b>${username}</b>!`;
      welcome.style.marginBottom = '20px';
      welcome.style.fontSize = '18px';
      welcome.style.textAlign = 'center';
      document.querySelector('.container')?.prepend(welcome);

      // –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ –ø–∞–Ω–µ–ª—å
      const panelBtn = document.createElement('button');
      panelBtn.innerText = '–ü–µ—Ä–µ–π—Ç–∏ –≤ –ø–∞–Ω–µ–ª—å';
      panelBtn.style.marginTop = '10px';
      panelBtn.addEventListener('click', () => {
        goToPanel(role);
      });
      document.querySelector('.container')?.appendChild(panelBtn);
    } else {
      console.log('üë§ –ì–æ—Å—Ç—å: –æ—Å—Ç–∞—ë—Ç—Å—è –Ω–∞ home.html');
    }
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Å—Å–∏–∏:', err);
  }

  // –ü–æ–¥–≥—Ä—É–∂–∞–µ–º –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å
  loadInventory();

  // –ù–∞–≤–µ—à–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–∞ –∫–Ω–æ–ø–∫–∏ —Ä–æ–ª–µ–π
  const btnAdmin = document.getElementById("btn-admin");
  const btnCashier = document.getElementById("btn-cashier");
  const btnWorker = document.getElementById("btn-worker");

  if (btnAdmin) btnAdmin.addEventListener("click", () => goToPanel("admin"));
  if (btnCashier) btnCashier.addEventListener("click", () => goToPanel("cashier"));
  if (btnWorker) btnWorker.addEventListener("click", () => goToPanel("worker"));
});

// ===== –§—É–Ω–∫—Ü–∏–∏ =====

function logout() {
  window.location.href = '/logout';
}

function toggleInventory() {
  const box = document.getElementById('inventoryBox');
  if (box) {
    box.style.display = box.style.display === 'none' ? 'block' : 'none';
  }
}

async function loadInventory() {
  try {
    const res = await fetch('/inventory/items');
    const data = await res.json();
    if (data.success) {
      const tbody = document.querySelector('#inventoryTable tbody');
      if (tbody) {
        tbody.innerHTML = '';
        data.items.forEach(item => {
          const row = document.createElement('tr');
          row.innerHTML = `
            <td>${item.name}</td>
            <td>${item.quantity}</td>
            <td>${item.price}</td>
            <td>${item.sku}</td>
          `;
          tbody.appendChild(row);
        });
      }
    }
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è:', err);
  }
}

async function loadUsers() {
  try {
    const res = await fetch('/admin/users');
    const data = await res.json();
    if (data.success) {
      const tbody = document.querySelector('#userTable tbody');
      if (tbody) {
        tbody.innerHTML = '';
        data.users.forEach(user => {
          const row = document.createElement('tr');
          row.innerHTML = `
            <td>${user.username}</td>
            <td>${user.email}</td>
            <td>${user.role}</td>
            <td><button class="delete-btn" data-id="${user.id}">‚ùå</button></td>
          `;
          tbody.appendChild(row);
        });

        // –Ω–∞–≤–µ—à–∏–≤–∞–µ–º —Å–æ–±—ã—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è
        tbody.querySelectorAll('.delete-btn').forEach(btn => {
          btn.addEventListener('click', () => {
            deleteUser(btn.dataset.id);
          });
        });
      }
    }
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', err);
  }
}

async function deleteUser(id) {
  if (!confirm('–£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è?')) return;
  await fetch('/admin/users/delete', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ userId: id })
  });
  loadUsers();
}

async function goToPanel(targetRole) {
  try {
    const res = await fetch('/session');
    const data = await res.json();

    if (!data.success) {
      alert('–°–Ω–∞—á–∞–ª–∞ –≤–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É');
      return window.location.href = '/login.html';
    }

    const { role } = data.user;
    if (role !== targetRole) {
      alert(`‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–æ–ª–∏ "${targetRole}"`);
      return;
    }

    // –í—Å—ë –æ–∫ ‚Äî –ø–µ—Ä–µ—Ö–æ–¥–∏–º
    if (role === 'admin') window.location.href = '/admin.html';
    else if (role === 'cashier') window.location.href = '/cashier.html';
    else if (role === 'worker') window.location.href = '/worker.html';
  } catch (err) {
    console.error('–û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Ö–æ–¥–∞:', err);
    alert('–û—à–∏–±–∫–∞ —Å–µ—Ç–∏');
  }
}
